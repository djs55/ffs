#!/usr/bin/env ocamlscript
Ocaml.sources := ["common.ml"];
Ocaml.packs := ["xapi-storage"; "cmdliner"; "re.str"; "oUnit"; "uri"];
Ocaml.ocamlflags := ["-thread"]
--
(*
 * Copyright (C) Citrix Systems Inc.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published
 * by the Free Software Foundation; version 2.1 only. with the special
 * exception on linking described in file LICENSE.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *)
open Common

module Command = struct
  open Storage.P.Types
  include Plugin.Query

  let command common { Plugin.Query.In.dbg } = {
    plugin = "ffs";
    name = "Flat FileSystem Volume plugin";
    description = "This plugin uses an existing filesystem and represents files as Volumes";
    vendor = "None";
    copyright = "(C) 2014 Citrix Inc";
    version = "0.1";
    required_api_version = "0.1";
    features = [ "SR_ATTACH"; "SR_DETACH"; "SR_CREATE"; "VDI_CREATE"; "VDI_DESTROY"; "VDI_CLONE"; "VDI_SNAPSHOT"; "VDI_ATTACH"; "VDI_DETACH"; "VDI_ACTIVATE"; "VDI_DEACTIVATE"];
    configuration = []
  }
end

module Test = struct
  open OUnit

  let test common = ()
end

module M = Make(Command)(Test)
let _ = M.main ()
