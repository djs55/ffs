#!/usr/bin/env python

import urlparse
import os
import os.path
import json
import xapi
import xapi.volume


class Implementation(xapi.volume.Volume_skeleton):

    def set_description(self, dbg, sr, key, new_description):
        u = urlparse.urlparse(sr)
        if not(os.path.isdir(u.path)):
            raise xapi.volume.Sr_not_attached(sr)
        path = os.path.join(u.path, key)

        uuid_ = None
        name = ""
        description = ""
        keys = {}
        if os.path.exists(path + ".json"):
            with open(path + ".json", "r") as json_fd:
                js = json.load(json_fd)
                uuid_ = js["uuid"]
                name = js["name"]
                description = js["description"]
                keys = js["keys"]

        description = new_description

        meta = {
            "uuid": uuid_,
            "name": name,
            "description": description,
            "keys": keys
        }
        with open(path + ".json", "w") as json_fd:
            json.dump(meta, json_fd)
            json_fd.write("\n")

        return None

if __name__ == "__main__":
    cmd = xapi.volume.Volume_commandline(Implementation())
    cmd.set_description()
