#!/usr/bin/env python

import uuid
import errno
import urlparse
import subprocess
import os
import json
import xapi
import xapi.volume
import xapi.poolhelper
from xapi.common import call, touch_file_unique

class Implementation(xapi.volume.Volume_skeleton):

    def snapshot(self, dbg, sr, key):
        u = urlparse.urlparse(sr)
        if not(os.path.isdir(u.path)):
            raise xapi.volume.Sr_not_attached(sr)
        path = os.path.join(u.path, key)
        if not(os.path.exists(path)):
            raise xapi.volume.Volume_does_not_exist(path)
        new_name = touch_file_unique(dbg, path, "")

        # both cp --reflink and cp may require that the image is quiesced
        xapi.poolhelper.suspend_datapath_in_pool(dbg, path)
        try:
            code = subprocess.call(["cp", "--reflink=always", path, new_name])
            if code != 0:
                code = subprocess.call(["cp", path, new_name])
                if code != 0:
                    os.unlink(new_name)
                    raise xapi.volume.Unimplemented("Copy failed?")
        finally:
            xapi.poolhelper.resume_datapath_in_pool(dbg, path)

        key = os.path.basename(new_name)
        uuid_ = str(uuid.uuid4())
        name = key
        description = ""
        keys = {}
        if os.path.exists(path + ".json"):
            with open(path + ".json", "r") as fd:
                js = json.load(fd)
                name = js["name"]
                description = js["description"]
        meta = {
            "uuid": uuid_,
            "name": name,
            "description": description,
            "keys": keys
        }
        with open(new_name + ".json", "w") as json_fd:
            json.dump(meta, json_fd)
            json_fd.write("\n")

        stat = os.stat(new_name)
        size = stat.st_size
        return {
            "key": key,
            "uuid": uuid_,
            "name": name,
            "description": description,
            "read_write": True,
            "virtual_size": size,
            "physical_utilisation": 0,
            "uri": ["raw+file://" + new_name],
            "keys": {}
        }

if __name__ == "__main__":
    cmd = xapi.volume.Volume_commandline(Implementation())
    cmd.snapshot()
