#!/usr/bin/env python

import sys
import urlparse
import os
import os.path
import xapi
import xapi.volume


class Implementation(xapi.volume.Volume_skeleton):

    def resize(self, dbg, sr, key, new_size):
        new_size = int(new_size)
        u = urlparse.urlparse(sr)
        path = os.path.join(u.path, key)
        if not(os.path.exists(path)):
            raise xapi.volume.Volume_does_not_exist(key)
        size = os.stat(path).st_size
        if new_size < size:
            raise(xapi.volume.Unimplemented("Shrinking is not supported"))
        elif new_size == size:
            # No action needed
            pass
        elif new_size > size:
            # Expand the virtual disk
            try:
                fd = os.open(path, os.O_EXCL | os.O_WRONLY)
                os.lseek(fd, new_size - 1, os.SEEK_SET)
                os.write(fd, "\000")
                os.close(fd)
            except OSError as e:
                # ToDo: we ought to raise something more meaningful here
                raise
        return None

if __name__ == "__main__":
    cmd = xapi.volume.Volume_commandline(Implementation())
    cmd.resize()
