#!/usr/bin/env python

from common import mountpoint_root
import errno
import urlparse
import os
import os.path
import xapi
import xapi.volume
from xapi.common import call
import XenAPI
import xcp.environ


class Implementation(xapi.volume.SR_skeleton):

    def attach(self, dbg, uri):

        # Ensure corosync+dlm are configured and up
        inventory = xcp.environ.readInventory()
        session = XenAPI.xapi_local()
        session.xenapi.login_with_password("root", "")
        host = session.xenapi.host.get_by_uuid(
            inventory.get("INSTALLATION_UUID"))
        session.xenapi.host.call_plugin(host, "gfs2setup", "gfs2Setup", {})

        # Mount the gfs2 filesystem
        u = urlparse.urlparse(uri)
        mountpoint = os.path.abspath(mountpoint_root + u.path)
        try:
            os.makedirs(mountpoint)
        except OSError as exc:
            if exc.errno == errno.EEXIST and os.path.isdir(mountpoint):
                pass
            else:
                raise
        if not os.path.ismount(mountpoint):
            cmd = ["mount", "-t", "gfs2", "-o",
                   "noatime,nodiratime", u.path, mountpoint]
            call(dbg, cmd)

        uri = "file://" + mountpoint
        return uri

if __name__ == "__main__":
    cmd = xapi.volume.SR_commandline(Implementation())
    cmd.attach()
