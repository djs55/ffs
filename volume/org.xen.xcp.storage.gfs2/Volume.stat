#!/usr/bin/env python

import urlparse
import os
import os.path
import xapi
import xapi.volume
from xapi.common import call


class Implementation(xapi.volume.Volume_skeleton):

    def stat(self, dbg, sr, key):
        u = urlparse.urlparse(sr)
        path = os.path.join(u.path, key)
        if not(os.path.exists(path)):
            raise xapi.volume.Volume_does_not_exist(key)

        # Determine volume type by key
        if key[-4:] == ".vhd":
            type = "vhd+file"
            cmd = ["/usr/bin/vhd-util", "query", "-n", path, "-v"]
            stdout = call(dbg, cmd)
            size = str(int(stdout) * 1048576)
        else:
            type = "raw+file"
            stat = os.stat(path)
            size = stat.st_size

        return {
            "key": key,
            "name": key,
            "description": "",
            "read_write": True,
            "virtual_size": size,
            "uri": [("%s:///" % type) + path]
        }

if __name__ == "__main__":
    cmd = xapi.volume.Volume_commandline(Implementation())
    cmd.stat()
